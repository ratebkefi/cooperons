security:
    encoders:
        #Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512
        #Apr\UserBundle\Entity\User: sha512
        #Apr\UserBundle\Security\UserSecurity : sha512
       
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_MEMBER]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email
            #id: fos_user.user_manager
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        document:
            pattern: ^/api/doc
            security: false
        api_login:
            pattern:  ^/rest/login
            stateless: true
            anonymous: true
            form_login:
                check_path:               /rest/login_check
                username_parameter:       username
                password_parameter:       password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        api_public:
            pattern:  ^/rest/public
            anonymous: true
        api:
            pattern:   ^/rest
            anonymous: false
            stateless: true
            lexik_jwt: ~
        auth:
            pattern: ^/api/*
            stateless: true
            simple_preauth:
              authenticator: apikey_authenticator
        public:
            pattern:  ^/public
            anonymous: ~
            context: loggedInContext

    access_control:
        #- { path: ^/(login$|register|resetting), role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/member, role: ROLE_MEMBER }
        - { path: ^/rest/public, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/rest, role: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin, role: ROLE_ADMIN }

